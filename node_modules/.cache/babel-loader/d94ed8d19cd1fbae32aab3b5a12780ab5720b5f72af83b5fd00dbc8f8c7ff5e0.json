{"ast":null,"code":"var _jsxFileName = \"/Users/barto/Library/Mobile Documents/com~apple~CloudDocs/UAI/6\\xB0 Semestre/Disen\\u0303o De Software/Learning/React/first-proyect/src/context/TaskContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\nimport { tasks as data } from \"../data/tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskContext = /*#__PURE__*/createContext();\nexport function TaskContextProvider(props) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  function createTask(task) {\n    setTasks([...tasks, {\n      title: task.title,\n      id: tasks.length,\n      description: task.description\n    }]); // copiamos todos los elementos de tasks mediante [...tasks] y le agregamos el nuevo task\n  }\n\n  function deleteTask(taskId) {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  }\n  useEffect(() => {\n    setTasks(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      // tasks: tasks,           \n      deleteTask,\n      // deleteTask: deleteTask,     si tienen el mismo nombre podemos ponerlo solo\n      createTask // createTask: createTask\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskContextProvider, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskContextProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskContextProvider\");","map":{"version":3,"names":["createContext","useState","tasks","data","jsxDEV","_jsxDEV","TaskContext","TaskContextProvider","props","_s","setTasks","createTask","task","title","id","length","description","deleteTask","taskId","filter","useEffect","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/barto/Library/Mobile Documents/com~apple~CloudDocs/UAI/6° Semestre/Diseño De Software/Learning/React/first-proyect/src/context/TaskContext.js"],"sourcesContent":["import {createContext, useState} from 'react'\nimport { tasks as data } from \"../data/tasks\";\n\nexport const TaskContext = createContext()\n\nexport  function TaskContextProvider(props) {\n\n  const [tasks, setTasks] = useState([])\n\n  function createTask(task) {\n    setTasks([...tasks, {\n      title: task.title,\n      id: tasks.length,\n      description: task.description\n    }])   // copiamos todos los elementos de tasks mediante [...tasks] y le agregamos el nuevo task\n  }\n\n  function deleteTask(taskId) { \n    setTasks(tasks.filter(task => task.id !== taskId))\n  }\n\n  useEffect(() => {\n    setTasks(data);\n  }, [])\n\n  return (\n    <TaskContext.Provider value={{\n      tasks,        // tasks: tasks,           \n      deleteTask,   // deleteTask: deleteTask,     si tienen el mismo nombre podemos ponerlo solo\n      createTask    // createTask: createTask\n    }}>{props.children}</TaskContext.Provider>\n  )\n}"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,QAAQ,QAAO,OAAO;AAC7C,SAASC,KAAK,IAAIC,IAAI,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAQ,SAASO,mBAAmBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAE1C,MAAM,CAACP,KAAK,EAAEQ,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,SAASU,UAAUA,CAACC,IAAI,EAAE;IACxBF,QAAQ,CAAC,CAAC,GAAGR,KAAK,EAAE;MAClBW,KAAK,EAAED,IAAI,CAACC,KAAK;MACjBC,EAAE,EAAEZ,KAAK,CAACa,MAAM;MAChBC,WAAW,EAAEJ,IAAI,CAACI;IACpB,CAAC,CAAC,CAAC,EAAG;EACR;;EAEA,SAASC,UAAUA,CAACC,MAAM,EAAE;IAC1BR,QAAQ,CAACR,KAAK,CAACiB,MAAM,CAACP,IAAI,IAAIA,IAAI,CAACE,EAAE,KAAKI,MAAM,CAAC,CAAC;EACpD;EAEAE,SAAS,CAAC,MAAM;IACdV,QAAQ,CAACP,IAAI,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEE,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAC3BpB,KAAK;MAAS;MACde,UAAU;MAAI;MACdN,UAAU,CAAI;IAChB,CAAE;IAAAY,QAAA,EAAEf,KAAK,CAACe;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAE9C;AAAClB,EAAA,CA3BgBF,mBAAmB;AAAAqB,EAAA,GAAnBrB,mBAAmB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}